<head>
    <script src="https://cdn.socket.io/4.6.0/socket.io.min.js" integrity="sha384-c79GN5VsunZvi+Q/WObgk2in0CbZsHnjEqvFxC5DxHn9lTfNce2WW6h2pH6u/kF+" crossorigin="anonymous"></script>
    <title>chat teste</title>
   <!-- <style>
      main { margin: 0; padding-bottom: 3rem; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; }

      #form { background: rgba(0, 0, 0, 0.15); padding: 0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display: flex; height: 3rem; box-sizing: border-box; backdrop-filter: blur(10px); }
      #input { border: none; padding: 0 1rem; flex-grow: 1; border-radius: 2rem; margin: 0.25rem; }
      #input:focus { outline: none; }
      #form > button { background: #333; border: none; padding: 0 1rem; margin: 0.25rem; border-radius: 3px; outline: none; color: #fff; }

      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages > li { padding: 0.5rem 1rem; }
      #messages > li:nth-child(odd) { background: #efefef; }
    </style>-->

    <style>
    body {
    font-family: Arial, sans-serif;
    background-color: #f5f5f5;
    margin: 0;
    padding: 0;
    display: block;
  }
  
  h1 {
    text-align: center;
    margin: 10px 0;
  }
  
  .chat-container {
    display: flex;
    height: 90vh;
  }
  
  .chat-sidebar {
    flex: 1;
    padding: 20px;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    overflow-y: auto;
    
  }
  
  .chat-messages {
    flex: 5;
    padding: 20px;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    overflow-y: auto;

  }
  
  .chat-input {
    flex: 2;
    padding: 20px;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    display: flex;
    align-items: end;
  }
  
  .chat-input input[type="text"] {
    flex: 1;
    padding: 10px;
    border: none;
    border-radius: 4px;
  }
  
  .chat-input button {
    padding: 10px 20px;
    margin-left: 10px;
    background-color: #4CAF50;
    color: #fff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
  
  ul {
    list-style-type: none;
    padding: 0;
  }
  
  li {
    margin-bottom: 10px;
  }
  
  button {
    padding: 10px 20px;
    background-color: #4CAF50;
    color: #fff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
  </style>
  </head>
  <main>
    <!--<ul id="messages"></ul>
    <form id="form" action="">
      <input id="input" autocomplete="off" /><button>Enviar</button>-->

 <body>
    <h1>Teste chat</h1>
    <div class="chat-container">
      <div class="chat-sidebar">
        <h3>Selecione um chat:</h3>
        <ul>
          <li><button onclick="joinChat('chat1')">Chat 1</button></li>
          <li><button onclick="joinChat('chat2')">Chat 2</button></li>
          <li><button onclick="joinChat('chat3')">Chat 3</button></li>
        </ul>
      </div>
      <div class="chat-messages" id="messages"></div>
      <div class="chat-input">
        <p id="currentRoom"></p>
        <input type="text" id="messageInput" placeholder="Digite sua mensagem">
        <button onclick="sendMessage()">Enviar</button>
      </div>
    </div>
  </body>

<!--<script>
  
  var socket = io();
  var messages = document.getElementById('messages');
  var form = document.getElementById('form');
  var input = document.getElementById('input');

  form.addEventListener('submit', function(e) {
    e.preventDefault();
    if (input.value) {
      socket.emit('chat message', input.value);
      input.value = '';
    }
  });

  socket.on('chat message', function(msg) {
    var item = document.createElement('li');
    item.textContent = msg;
    messages.appendChild(item);
    window.scrollTo(0, document.body.scrollHeight);
  });

// Lógica do cliente
const messages = document.getElementById('messages');

socket.on('connect', () => {
  socket.emit('joinRoom', 'sala1');
});

socket.on('message', (message) => {
  const newMessage = document.createElement('div');
  newMessage.innerText = message;
  messages.appendChild(newMessage);
});

function sendMessage() {
  const input = document.getElementById('messageInput');
  const message = input.value;
  socket.emit('chatMessage', {
    room: 'sala1',
    message: message,
  });
  input.value = '';
}
  
</script>-->

<script>
      const socket = io();

      // Função para entrar em um chat
      function joinChat(chatId) {
        // Envia o evento de entrada no chat para o servidor
        socket.emit('join', chatId);

        // Limpa as mensagens do chat anterior
        document.getElementById('messages').innerHTML = '';

        // Exibe o chat atual
        document.getElementById('currentRoom').textContent = `Chat atual: ${chatId}`;
      }

      // Função para enviar uma mensagem
      function sendMessage() {
        const messageInput = document.getElementById('messageInput');
        const message = messageInput.value;
        messageInput.value = '';

        // Envia a mensagem para o servidor
        const chatId = document.getElementById('currentRoom').textContent.split(' ')[2];
        socket.emit('message', message, chatId);
      }

      socket.on('message', (data) => {
        // Exibe a mensagem recebida na interface do usuário
        const messageElement = document.createElement('p');
        messageElement.textContent = `${data.user}: ${data.message}`;
        document.getElementById('messages').appendChild(messageElement);
      });

      socket.on('chatMessages', (messages) => {
        // Exibe as mensagens existentes no chat ao entrar
        messages.forEach((message) => {
          const messageElement = document.createElement('p');
          messageElement.textContent = `${message.user}: ${message.message}`;
          document.getElementById('messages').appendChild(messageElement);
        });
      });
    </script>
    </form>
  </main>