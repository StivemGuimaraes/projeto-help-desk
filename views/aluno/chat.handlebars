<head>
    <script src="https://cdn.socket.io/4.6.0/socket.io.min.js" integrity="sha384-c79GN5VsunZvi+Q/WObgk2in0CbZsHnjEqvFxC5DxHn9lTfNce2WW6h2pH6u/kF+" crossorigin="anonymous"></script>
    <script defer src="/js/foto_perfil.js"></script>
    <title>chat teste</title>
   <!-- <style>
      main { margin: 0; padding-bottom: 3rem; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; }

      #form { background: rgba(0, 0, 0, 0.15); padding: 0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display: flex; height: 3rem; box-sizing: border-box; backdrop-filter: blur(10px); }
      #input { border: none; padding: 0 1rem; flex-grow: 1; border-radius: 2rem; margin: 0.25rem; }
      #input:focus { outline: none; }
      #form > button { background: #333; border: none; padding: 0 1rem; margin: 0.25rem; border-radius: 3px; outline: none; color: #fff; }

      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages > li { padding: 0.5rem 1rem; }
      #messages > li:nth-child(odd) { background: #efefef; }
    </style>-->

    <style>
    body {
    font-family: Arial, sans-serif;
    background-color: #f5f5f5;
    margin: 0;
    padding: 0;
    display: block;
  }
  
  h1 {
    text-align: center;
    margin: 10px 0;
  }
  h3{
    margin-top: 30px;
  }

  .chat-container {
    display: flex;
    height: 90vh;
  }
  
  .chat-sidebar {
    flex: 0,7;
    padding: 10px;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    overflow-y: auto;
    height: 730px;
    padding-right: 20px;
    margin-top: 80px;  
  }
  
  .chat-messages {
    flex: 5;
    padding: 20px;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    overflow-y: auto;
    padding-top: 40px;
    height: 78vh;
    margin-top: 80px;
  }
  .chat{
    flex: 2;
    
    
  }
  .chat-input {
    flex: 2;
    padding: 30px;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    align-items: end;
  }
  
  .chat-input input[type="text"] {
    flex: 1;
    padding: 14px;
    border: none;
    border-radius: 4px;
    width: 84%;
    display: inline-block;
  }
  
  .chat-input button {
    padding: 10px 20px;
    margin-left: 10px;
    /*background-color: #4CAF50;*/
    color: #fff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    flex:2;
  }
  
  ul {
    list-style-type: none;
    padding: 0;
  }
  
  li {
    margin-bottom: 10px;
  }
  
  button {
    padding: 10px 20px;
    /*background-color: #4CAF50;
    color: #fff;
    border: none;*/
    border-radius: 4px;
    cursor: pointer;
  }
  
  </style>
  </head>
<header
  class="shadow fixed-top"
  style="
        background: rgb(45, 111, 131);
        background: linear-gradient(
          90deg,
          rgba(45, 111, 131, 1) 17%,
          rgba(28, 46, 76, 1) 100%
        );
      "
>
  <div class="container-fluid">
    <div class="row align-items-center">
      <div class="col-md-2 col-sm-1 col-lg-1">
        <a href="/admin" class="text-decoration-none text-white">
          <img
            class="img-fluid float-start"
            src="/img/logo_tcc.png"
            alt="logo aqui"
            width="90px"
            height="90px"
            title="logo"
          />
        </a>
      </div>
      <div class="col-md-5 col-sm-6 col-lg-4">
        <a href="/admin" class="text-white text-decoration-none d-inline-block">
          <h1 class="text-start fs-2" title="academy help desk">Academy Help
            Desk</h1>
        </a>
      </div>
      <div class="col-md-5 col-sm-5 col-lg-7 text-end">
        <a
          data-bs-toggle="offcanvas"
          data-bs-target="#offcanvasScrolling"
          aria-controls="offcanvasScrolling"
          style="cursor: pointer; display:inline-block"
        ><div id="img-hover" title="lista de navagação"></div></a>
      </div>
    </div>
  </div>
  <div
    class="offcanvas offcanvas-end shadow"
    data-bs-scroll="true"
    data-bs-backdrop="false"
    tabindex="-1"
    id="offcanvasScrolling"
    aria-labelledby="offcanvasScrollingLabel"
  >
    <div class="offcanvas-header">
      <h5 class="offcanvas-title" id="offcanvasScrollingLabel">Olá,
        {{usuario}}
      </h5>
      <button
        type="button"
        class="btn-close text-reset"
        data-bs-dismiss="offcanvas"
        aria-label="Close"
      ></button>
    </div>
    <div class="offcanvas-body">
      <div class="row mb-4">
        <form
          action="/admin/chat/foto"
          method="post"
          enctype="multipart/form-data"
          id="form_perfil"
        >
          {{#if foto}}
            <img
              src="/upload/admin/{{foto}}"
              class="rounded-circle mx-auto d-block"
              id="foto_perfil"
              height="100px"
              width="100px"
              style="cursor: pointer;"
            />
            <div class="text-center mt-3">
              <a
                href="/admin/chat/exclusao/{{matricula}}"
                class="btn btn-outline-danger"
              >Excluir</a>
            </div>
          {{else}}
            <img
              src="\img\do-utilizador.png"
              class="rounded-circle mx-auto d-block"
              id="foto_perfil"
              height="100px"
              width="100px"
              style="cursor: pointer;"
            />
          {{/if}}
          <input
            class="form-control"
            type="file"
            name="admin_foto"
            accept="image/*"
            maxlength="150"
            id="input_perfil"
            hidden
          />
        </form>
      </div>
      <div class="row mb-3">
        <div class="d-grid gap-2">
          <a href="/admin" class="btn btn-outline-dark" type="button">Inicio</a>
        </div>
      </div>
      <div class="row mb-3">
        <div class="d-grid gap-2">
          <a
            href="/admin/funcionario"
            class="btn btn-outline-dark"
            type="button"
          >Lista de funcionários</a>
        </div>
      </div>
      <div class="row mb-3">
        <div class="d-grid gap-2">
          <a
            href="/admin/chamado"
            class="btn btn-outline-dark"
            type="button"
          >Lista de chamados</a>
        </div>
      </div>
      <div class="row mb-3">
        <div class="d-grid gap-2">
          <a
            href="/admin/relatorio"
            class="btn btn-outline-dark"
            type="button"
          >Lista de relatórios</a>
        </div>
      </div>
      <div class="row mb-3">
        <div class="d-grid gap-2">
          <a
            href="/admin/professor"
            class="btn btn-outline-dark"
            type="button"
          >Lista de professores</a>
        </div>
      </div>
      <div class="row mb-3">
        <div class="d-grid gap-2">
          <a
            href="/admin/aluno"
            class="btn btn-outline-dark"
            type="button"
          >Lista de alunos</a>
        </div>
      </div>
      <div class="row mb-3">
        <div class="d-grid gap-2">
          <a
            href="/admin/cadastrar-professor"
            class="btn btn-outline-dark"
            type="button"
          >Cadastro de professores</a>
        </div>
      </div>
      <div class="row mb-3">
        <div class="d-grid gap-2">
          <a
            href="/admin/cadastrar-aluno"
            class="btn btn-outline-dark"
            type="button"
          >Cadastro de alunos</a>
        </div>
      </div>
      <div class="row mb-3">
        <div class="d-grid gap-2">
          <a
            href="/admin/cadastrar-funcionario"
            class="btn btn-outline-dark"
            type="button"
          >Cadastro de funcionários</a>
        </div>
      </div>
      <div class="row mb-3">
        <div class="d-grid gap-2">
          <a 
          href="/admin/chat" 
          class="btn btn-outline-dark" 
          type="button">
          Chat
          </a>
        </div>
      </div>
      <div class="row mt-5">
        <div class="d-grid gap-2">
          <a
            href="/admin/logout"
            class="btn btn-outline-danger"
            type="button"
          >Sair</a>
        </div>
      </div>
    </div>
  </div>
</header>
<main>
    <!--<ul id="messages"></ul>
    <form id="form" action="">
      <input id="input" autocomplete="off" /><button>Enviar</button>-->
    <div class="chat-container">
      <div class="chat-sidebar">
        <h3 class="text-center">Selecione um chat</h3>
        <ul>
          {{#each chamado}}
          {{#if this.nome_aluno}}
          <li class="text-center"><button class="btn btn-success" style="width: 75%;" onclick="joinChat('{{this.id}}')">Chamado</br></br> Titulo: {{this.titulo}}</br> Assunto: {{this.assunto}}</br> Nome do aluno: {{this.nome_aluno}}</br> {{#if this.nome_funcionario}}Nome do funcionário: {{this.nome_funcionario}}{{else}}Nenhum funcionário vinculado a esse chamado{{/if}}</button></li>
          {{/if}}
          {{#if this.nome_professor}}
          <li class="text-center"><button class="btn btn-success" style="width: 75%;" onclick="joinChat('{{this.id}}')">Chamado</br></br> Titulo: {{this.titulo}}</br> Assunto: {{this.assunto}}</br> Nome do professor: {{this.nome_professor}}</br> {{#if this.nome_funcionario}}Nome do funcionário: {{this.nome_funcionario}}{{else}}Nenhum funcionário vinculado a esse chamado{{/if}}</button></li>
          {{/if}}
          <!--<li><button onclick="joinChat('chat3')">Chat 3</button></li>-->
          {{/each}}
        </ul> 
        
      </div>
     <div class="chat">
          <div class="chat-messages" id="messages"></div>
              <div class="chat-input"><div>
              <!--willian não precisar avisar o chat atual, só precisar mudar a cor dos botoes--> 
              <!--<p id="currentRoom"></p>-->
              <input type="text" class="form-control" id="messageInput" placeholder="Digite sua mensagem">
              <button class="btn btn-success" onclick="sendMessage()">
                Enviar
              </button>
            </div>
          </div>
      </div>
    </div>
  </body>

<!--<script>
  
  var socket = io();
  var messages = document.getElementById('messages');
  var form = document.getElementById('form');
  var input = document.getElementById('input');

  form.addEventListener('submit', function(e) {
    e.preventDefault();
    if (input.value) {
      socket.emit('chat message', input.value);
      input.value = '';
    }
  });

  socket.on('chat message', function(msg) {
    var item = document.createElement('li');
    item.textContent = msg;
    messages.appendChild(item);
    window.scrollTo(0, document.body.scrollHeight);
  });

// Lógica do cliente
const messages = document.getElementById('messages');

socket.on('connect', () => {
  socket.emit('joinRoom', 'sala1');
});

socket.on('message', (message) => {
  const newMessage = document.createElement('div');
  newMessage.innerText = message;
  messages.appendChild(newMessage);
});

function sendMessage() {
  const input = document.getElementById('messageInput');
  const message = input.value;
  socket.emit('chatMessage', {
    room: 'sala1',
    message: message,
  });
  input.value = '';
}
  
</script>-->

<script>
      const socket = io();

      // Função para entrar em um chat
      function joinChat(chatId) {
        // Envia o evento de entrada no chat para o servidor
        socket.emit('join', chatId);

        // Limpa as mensagens do chat anterior
        document.getElementById('messages').innerHTML = '';

        // Exibe o chat atual
        // document.getElementById('currentRoom').textContent = `Chat atual: ${chatId}`;
      }

      // Função para enviar uma mensagem
      function sendMessage() {
        const messageInput = document.getElementById('messageInput');
        const message = messageInput.value;
        messageInput.value = '';

        // Envia a mensagem para o servidor
        const chatId = document.getElementById('currentRoom').textContent.split(' ')[2];
        socket.emit('message', message, chatId);
      }

      socket.on('message', (data) => {
        // Exibe a mensagem recebida na interface do usuário
        const messageElement = document.createElement('p');
        messageElement.textContent = `${data.user}: ${data.message}`;
        document.getElementById('messages').appendChild(messageElement);
      });

      socket.on('chatMessages', (messages) => {
        // Exibe as mensagens existentes no chat ao entrar
        messages.forEach((message) => {
          const messageElement = document.createElement('p');
          messageElement.textContent = `${message.user}: ${message.message}`;
          document.getElementById('messages').appendChild(messageElement);
        });
      });
    </script>
    </form>
  </main>